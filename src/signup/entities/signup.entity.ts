import { ObjectType, Field, ID } from '@nestjs/graphql';
import { Entity, PrimaryKey, Property, SerializedPrimaryKey, Filter} from '@mikro-orm/core';
import { ObjectId } from '@mikro-orm/mongodb';

@ObjectType()
export class Signup {
  @Field(() => ID, { description: 'autogenerated UserID' })
  id

  @Field(() => String, { description: 'username' })
  name
  
  @Field(() => String, { description: 'Y/M/D' })
  DOB: string;
  
  // @Field(() => Number)
  // age?: number;
  
  @Field(() => String)
  email: string;
  
  @Field(() => String)
  town?: string;

  @Field(() => String)
  product: string;
  
  @Field({nullable: true})
  phone?: string;

  // @Field({nullable: true})
  // category: string;
  
}

@Entity({tableName:"signup"})
@Filter({ name: 'byProduct', cond: args => ({ product: { item: args.product } }) })

export class Signupdb {
  @PrimaryKey()
  _id: ObjectId;

  @SerializedPrimaryKey()
  id!: string;

  @Property()
  name!: string;

  @Property()
  DOB!: string;

  // @Property()
  // age?:number;

  @Property()
  email!: string;

  @Property()
  town?: string;

  @Property()
  product: string;

  @Property()
  phone?: string;

  @Property()
  createdAt = new Date();

  @Property({ onUpdate: () => new Date() })
  updatedAt = new Date();

  constructor(name, DOB, email, product:string, town?, phone?) {
    this.name = name;
    this.DOB = DOB;
    this.email = email;
    this.town = town;
    this.product = product;
    this.phone = phone;
  }
}
